{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst API_KEY = '50824035-87dfb0469b0d9be7736d790bf';\nconst params = new URLSearchParams({\n  key: API_KEY,\n  q: '',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: 'true',\n});\n\nexport function getImagesByQuery(query) {\n  params.set('q', query);\n  return axios(`https://pixabay.com/api?${params}`).then(res => {\n    res.data.hits;\n  });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('#loader');\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  animationDelay: 250,\n});\n\nexport function createGallery(images) {\n  const createMarkup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n        <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n        <img class=\"gallery-img\" src=\"${webformatURL}\" alt=\"${tags}\" width=\"300\"/>\n        <ul class=\"gallery-desc\">\n        <li class=\"gallery-desc-item\">\n        <h2 class=\"gallery-subtitle\">Likes</h2>\n        <p class=\"gallery-text\">${likes}</p>\n        </li>\n        <li class=\"gallery-desc-item\">\n        <h2 class=\"gallery-subtitle\">Views</h2>\n        <p class=\"gallery-text\">${views}</p>\n        </li>\n         <li class=\"gallery-desc-item\">\n        <h2 class=\"gallery-subtitle\">Comments</h2>\n        <p class=\"gallery-text\">${comments}</p>\n        </li>\n        <li class=\"gallery-desc-item\">\n        <h2 class=\"gallery-subtitle\">Downloads</h2>\n        <p class=\"gallery-text\">${downloads}</p>\n        </li>\n        </ul>\n        </a>\n        </li>\n        `\n    )\n    .join('');\n\n  gallery.innerHTML = createMarkup;\n  lightbox.refresh();\n}\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\nexport function showLoader() {\n  loader.classList.remove('hidden');\n}\n\nexport function hideLoader() {\n  loader.classList.add('hidden');\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport * as pixabayApi from './js/pixabay-api.js';\nimport * as render from './js/render-functions.js';\n\nconst form = document.querySelector('.form');\nconst formInput = document.querySelector('.form-input');\nconst button = document.querySelector('.form-btn');\n\nform.addEventListener('submit', formSubmit);\n\nfunction formSubmit(event) {\n  event.preventDefault();\n\n  const searchImage = formInput.value.trim();\n\n  if (searchImage === '') {\n    return alert(`Please, fill in the field`);\n  }\n\n  render.clearGallery();\n  render.showLoader();\n\n  pixabayApi\n    .getImagesByQuery(searchImage)\n    .then(res => {\n      if (!res.hits.length) {\n        return iziToast.error({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n          timeout: 5000,\n          color: 'red',\n        });\n      }\n      render.createGallery(res.hits);\n      render.hideLoader();\n    })\n    .catch(error => {\n      iziToast.error({\n        message: `Error`,\n        position: 'topRight',\n        timeout: 5000,\n        color: 'red',\n      });\n    })\n    .finally(() => {\n      render.hideLoader();\n    });\n}\n"],"names":["API_KEY","params","getImagesByQuery","query","axios","res","gallery","loader","lightbox","SimpleLightbox","createGallery","images","createMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","form","formInput","formSubmit","event","searchImage","render.clearGallery","render.showLoader","pixabayApi\n    .getImagesByQuery","iziToast","render.createGallery","render.hideLoader","error"],"mappings":"owBAIA,MAAMA,EAAU,qCACVC,EAAS,IAAI,gBAAgB,CACjC,IAAKD,EACL,EAAG,GACH,WAAY,QACZ,YAAa,aACb,WAAY,MACd,CAAC,EAEM,SAASE,EAAiBC,EAAO,CACtC,OAAAF,EAAO,IAAI,IAAKE,CAAK,EACdC,EAAM,2BAA2BH,CAAM,EAAE,EAAE,KAAKI,GAAO,CAC5DA,EAAI,KAAK,IACb,CAAG,CACH,CCfA,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,eAAgB,GAClB,CAAC,EAEM,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAeD,EAClB,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA;AAAA,wCAE4BL,CAAa;AAAA,wCACbD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,kCAIhCC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,kCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,SAMtC,EACA,KAAK,EAAE,EAEVb,EAAQ,UAAYM,EACpBJ,EAAS,QAAO,CAClB,CAEO,SAASY,GAAe,CAC7Bd,EAAQ,UAAY,EACtB,CAEO,SAASe,GAAa,CAC3Bd,EAAO,UAAU,OAAO,QAAQ,CAClC,CAEO,SAASe,GAAa,CAC3Bf,EAAO,UAAU,IAAI,QAAQ,CAC/B,CC1DA,MAAMgB,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAY,SAAS,cAAc,aAAa,EACvC,SAAS,cAAc,WAAW,EAEjDD,EAAK,iBAAiB,SAAUE,CAAU,EAE1C,SAASA,EAAWC,EAAO,CACzBA,EAAM,eAAc,EAEpB,MAAMC,EAAcH,EAAU,MAAM,KAAI,EAExC,GAAIG,IAAgB,GAClB,OAAO,MAAM,2BAA2B,EAG1CC,IACAC,IAEAC,EACoBH,CAAW,EAC5B,KAAKtB,GAAO,CACX,GAAI,CAACA,EAAI,KAAK,OACZ,OAAO0B,EAAS,MAAM,CACpB,QACE,2EACF,SAAU,WACV,QAAS,IACT,MAAO,KACjB,CAAS,EAEHC,EAAqB3B,EAAI,IAAI,EAC7B4B,GACN,CAAK,EACA,MAAMC,GAAS,CACdH,EAAS,MAAM,CACb,QAAS,QACT,SAAU,WACV,QAAS,IACT,MAAO,KACf,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbE,GACN,CAAK,CACL"}